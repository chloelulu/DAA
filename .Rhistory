merge(ark, Barnesiellaceae, by = 0)
bac <- merge(ark, Barnesiellaceae, by = 0)
bac <- merge(ark, Barnesiellaceae, by = 0) %>% column_to_rownames('Row.names')
bac
bac1 <- merge(bac, meta2, by = 0)
bac1
meta2 <- meta1[,'Case_ID', drop =F]
bac <- merge(ark, Barnesiellaceae, by = 0) %>% column_to_rownames('Row.names')
bac1 <- merge(bac, meta2, by = 0)
bac1
colnames(bac1)[1] <- 'SmapleID'
write.csv(bac1, '~/Desktop/Akkermansia_Barnesiellaceae_RelativeAbundance.csv', row.names = F)
fixed.effects
gsub(" ", "\\ ", "a b", fixed = TRUE)
gsub(" ", "\ ", "a b", fixed = TRUE)
my_str <- 'I am a \ backslash'
gsub(
pattern = ('\\\\'),
replacement = '',
x = my_str
)
gsub(
pattern = ('\\'),
replacement = '',
x = my_str,
fixed = T
)
gsub(
pattern = ('\\'),
replacement = '',
x = my_str,
fixed = T
)
dir.create('~/Desktop/CD4 TCM_1')
list.files('~/Desktop/CD4 TCM_1')
dir.create('~/Desktop/CD4 TCM_1/a')
dir.create('~/Desktop/CD4 TCM_1/b')
list.files('~/Desktop/CD4 TCM_1')
dir.create('~/Desktop/TCM_1/')
dir.create('~/Desktop/TCM_1/b')
list.files('~/Desktop/TCM_1/')
list.files('~/Desktop/TCM_1/')
dir.create('~/Desktop/a TCM_1/')
dir.create('~/Desktop/a TCM_1/b')
list.files('~/Desktop/a TCM_1/')
list.files('~/Desktop/a TCM_1/b')
list.files('~/Desktop/a TCM_1/')
set.seed(2)
df = data.frame(A = sample(c(0, 1), 100, replace = T),
B = sample(c(0, 1), 100, replace = T),
C = sample(c(0, 1), 100, replace = T),
D = sample(c(0, 1), 100, replace = T))
df
library("eulerr")
set.seed(10) #this seed changes the orientation of the sets
plot(euler(df), counts = T, fontface = 1)
library(limma)
vennDiagram(vennCounts(df), circle.col = 1:5)
df
dim(df)
vennCounts(df)
library(limma)
library(tidyverse)
library(ggforce)
set.seed((123))
mydata <- data.frame(A = rbinom(100, 1, 0.8),
B = rbinom(100, 1, 0.7),
C = rbinom(100, 1, 0.6)) %>%
mutate_all(., as.logical)
mydata
Datanovia
Login|Register0
HOME
LEARN
TOPICS
PRICING
SHOP
RESOURCES
ABOUT
CONTACT
English
VENN DIAGRAM WITH R OR RSTUDIO: A MILLION WAYS
HOMEDATA VISUALIZATIONVENN DIAGRAM WITH R OR RSTUDIO: A MILLION WAYS
Search
venn-diagram-in-r-or-rstudio-ggvenn-1.png
22 Nov
Venn Diagram with R or RStudio: A Million Ways
Alboukadel |  Venn diagram |  Data Visualization |  0
This article provides multiple solutions to create an elegant Venn diagram with R or RStudio. The following R packages will be illustrated: ggvenn, ggVenDiagram, VennDiagram and the gplots packages.
Contents:
Create a demo data
Using the ggvenn R package
Using the ggVennDiagram R package
Using the VennDiagram R package
Using the gplots R package
Conclusion
Create a demo data
set.seed(20190708)
genes <- paste("gene",1:1000,sep="")
x <- list(
A = sample(genes,300),
B = sample(genes,525),
C = sample(genes,440),
D = sample(genes,350)
)
set.seed(20190708)
genes <- paste("gene",1:1000,sep="")
x <- list(
A = sample(genes,300),
B = sample(genes,525),
C = sample(genes,440),
D = sample(genes,350)
)
if (!require(devtools)) install.packages("devtools")
devtools::install_github("yanlinlin82/ggvenn")
x
library("ggVennDiagram")
ggVennDiagram(x, label_alpha = 0)
library(VennDiagram)
install.packages("VennDiagram")
library(VennDiagram)
display_venn <- function(x, ...){
library(VennDiagram)
grid.newpage()
venn_object <- venn.diagram(x, filename = NULL, ...)
grid.draw(venn_object)
}
display_venn(x)
display_venn(x[1:2])
names(x)
x
cbind(x[1], x[2])
cbind(x[[1]], x[[2]])
set.seed(20190708)
genes <- paste("gene",1:1000,sep="")
x <- list(
A = sample(genes,300),
B = sample(genes,525),
C = sample(genes,440),
D = sample(genes,350)
)
x
install.packages('GUnifrac')
install.packages('GUniFrac')
library(GUniFrac)
ind <- smokers$meta$AIRWAYSITE == 'Throat'
otu.tab <- as.data.frame(smokers$otu[, ind])
meta <- cbind.data.frame(Smoke = factor(smokers$meta$SMOKER[ind]),
Sex = factor(smokers$meta$SEX[ind]),
Site = factor(smokers$meta$SIDEOFBODY[ind]),
SubjectID = factor(smokers$meta$HOST_SUBJECT_ID[ind]))
library(linda)
library(LinDA)
ind <- smokers$meta$AIRWAYSITE == 'Throat'
otu.tab <- as.data.frame(smokers$otu[, ind])
meta <- cbind.data.frame(Smoke = factor(smokers$meta$SMOKER[ind]),
Sex = factor(smokers$meta$SEX[ind]),
Site = factor(smokers$meta$SIDEOFBODY[ind]),
SubjectID = factor(smokers$meta$HOST_SUBJECT_ID[ind]))
ind1 <- which(meta$Site == 'Left')
res.left <- linda(otu.tab[, ind1], meta[ind1, ], formula = '~Smoke+Sex', alpha = 0.1,
prev.cut = 0.1, lib.cut = 1000, winsor.quan = 0.97)
ind2 <- which(meta$Site == 'Right')
res.right <- linda(otu.tab[, ind2], meta[ind2, ], formula = '~Smoke+Sex', alpha = 0.1,
prev.cut = 0.1, lib.cut = 1000, winsor.quan = 0.97)
rownames(res.left$output[[1]])[which(res.left$output[[1]]$reject)]
rownames(res.right$output[[1]])[which(res.right$output[[1]]$reject)]
linda.obj <- linda(otu.tab, meta, formula = '~Smoke+Sex+(1|SubjectID)', alpha = 0.1,
prev.cut = 0.1, lib.cut = 1000, winsor.quan = 0.97)
linda.plot(linda.obj, c('Smokey', 'Sexmale'),
titles = c('Smoke: n v.s. y', 'Sex: female v.s. male'), alpha = 0.1, lfc.cut = 1,
legend = TRUE, directory = NULL, width = 11, height = 8)
data(scDatExSim)
library(scDD)
data(scDatExSim)
scDatExSim
prior_param=list(alpha=0.01, mu0=0, s0=0.01, a0=0.01, b0=0.01)
scDatExSim <- scDD(scDatExSim, prior_param=prior_param, testZeroes=FALSE)
scDatExSim
scDatExSim@colData
scDatExSim@colData$condition
View(res.right)
pbmc.counts <- Read10X(data.dir = "~/Downloads/pbmc3k/filtered_gene_bc_matrices/hg19/")
library(Seurat)
pbmc.counts <- Read10X(data.dir = "~/Downloads/pbmc3k/filtered_gene_bc_matrices/hg19/")
pbmc.counts <- Read10X(data.dir = "~/Downloads/pbmc3k/filtered_gene_bc_matrices/hg19/")
pbmc.counts <- Read10X(data.dir = "~/Downloads/filtered_gene_bc_matrices/hg19/")
pbmc <- CreateSeuratObject(counts = pbmc.counts)
pbmc <- NormalizeData(object = pbmc)
pbmc <- FindVariableFeatures(object = pbmc)
pbmc <- ScaleData(object = pbmc)
pbmc <- RunPCA(object = pbmc)
pbmc <- FindNeighbors(object = pbmc)
pbmc <- FindClusters(object = pbmc)
pbmc <- RunTSNE(object = pbmc)
DimPlot(object = pbmc, reduction = "tsne")
pbmc
subset(x = pbmc, subset = MS4A1 > 3)
x = subset(x = pbmc, subset = MS4A1 > 3)
x
x@meta.data
?Seurat::SubsetData
??Seurat::SubsetData
# Get cell and feature names, and total numbers
colnames(x = pbmc)
Cells(object = pbmc)
Cells(pbmc)
rownames(x = pbmc)
ncol(x = pbmc)
nrow(x = pbmc)
# Get cell identity classes
Idents(object = pbmc)
levels(x = pbmc)
levels(x = pbmc)
Idents(object = pbmc)
colnames(pbmc@meta.data)
# Stash cell identity classes
pbmc[["old.ident"]] <- Idents(object = pbmc)
colnames(pbmc@meta.data)
unique(pbmc@meta.data$old.ident)
pbmc <- StashIdent(object = pbmc, save.name = "old.ident")
pbmc
Idents(object = pbmc)
# Set identity classes
Idents(object = pbmc) <- "CD4 T cells"
Idents(object = pbmc, cells = 1:10)
Idents(object = pbmc, cells = 1:10) <- "CD4 T cells"
# Set identity classes
Idents(object = pbmc)
# Set identity classes to an existing column in meta data
Idents(object = pbmc, cells = 1:10) <- "orig.ident"
Idents(object = pbmc) <- "orig.ident"
pbmc@meta.data$old.ident
pbmc@meta.data$orig.ident
pbmc <- RenameIdents(object = pbmc, `CD4 T cells` = "T Helper cells")
# Set identity classes to an existing column in meta data
Idents(object = pbmc, cells = 1:10) <- "orig.ident"
Idents(object = pbmc) <- "orig.ident"
# Rename identity classes
pbmc <- RenameIdents(object = pbmc, `CD4 T cells` = "T Helper cells")
subset(x = pbmc, subset = MS4A1 > 3, idents = "B cells")
subset(x = pbmc, idents = "B cells")
library(Seurat)
pbmc.counts <- Read10X(data.dir = "~/Downloads/filtered_gene_bc_matrices/hg19/")
pbmc <- CreateSeuratObject(counts = pbmc.counts)
pbmc <- NormalizeData(object = pbmc)
pbmc <- FindVariableFeatures(object = pbmc)
pbmc <- ScaleData(object = pbmc)
pbmc <- RunPCA(object = pbmc)
pbmc <- FindNeighbors(object = pbmc)
pbmc <- FindClusters(object = pbmc)
pbmc <- RunTSNE(object = pbmc)
DimPlot(object = pbmc, reduction = "tsne")
# Get cell and feature names, and total numbers
colnames(x = pbmc)
Cells(pbmc)
rownames(x = pbmc)
ncol(x = pbmc)
nrow(x = pbmc)
# Get cell identity classes
Idents(object = pbmc)
levels(x = pbmc)
# Stash cell identity classes
pbmc[["old.ident"]] <- Idents(object = pbmc)
pbmc <- StashIdent(object = pbmc, save.name = "old.ident")
# Set identity classes
Idents(object = pbmc) <- "CD4 T cells"
Idents(object = pbmc, cells = 1:10) <- "CD4 T cells"
# Set identity classes to an existing column in meta data
Idents(object = pbmc, cells = 1:10) <- "orig.ident"
Idents(object = pbmc) <- "orig.ident"
# Rename identity classes
pbmc <- RenameIdents(object = pbmc, `CD4 T cells` = "T Helper cells")
# Subset Seurat object based on identity class, also see ?SubsetData
subset(x = pbmc, idents = "B cells")
Idents(object = pbmc) <- "orig.ident"
head(pbmc@meta.data)
library(SingleCellExperiment)
counts <- matrix(rpois(100, lambda = 10), ncol=10, nrow=10)
sce <- SingleCellExperiment(counts)
sce
dim(counts)
sce <- SingleCellExperiment(list(counts=counts))
sce
sce
require(tdfdr)
require(qvalue)
source('https://raw.githubusercontent.com/jchen1981/TDFDR/master/Simulation/Code/SimFunc.R')
install.packages(c("ggplot2", "reshape2", "doMC", "pbivnorm", "nspmix"))
install.packages(c("ggplot2", "reshape2", "doMC", "pbivnorm", "nspmix"))
BiocManager::install(c("limma", "qvalue"))
devtools::install_github("jchen1981/TDFDR/R_package")
require(tdfdr)
require(qvalue)
source('https://raw.githubusercontent.com/jchen1981/TDFDR/master/Simulation/Code/SimFunc.R')
# Simulate data
data <- simulate.data(n = 100, p = 1000, conf.sig.cor = 1.25, dimZ = 2,
sig.density = 0.1, sig.strength.m = 0.4, sig.strength.sd = 0.2,
conf.density = 0.1, conf.strength.m = 0.4, conf.strength.sd = 0.2)
x <- data$x
z <- data$z
y <- data$y
truth <- data$truth
x
dim(x)
dim(y)
dim(truth)
truth
z
head(x)
head(y)
head(z)
devtools::install_github("ZRChao/adaANCOM")
library(adaANCOM)
library(phyloseq)
data(example) # phyloseq object
data <- example_data$data
fit <- adaANCOM(otu=data.frame(otu_table(data)),
Y=sample_data(data)$group,
tree=phy_tree(data), tfun = t.test, smooth=0.5)
fit$V
pkg = c('dplyr','tidyr','reshape','RColorBrewer','ggplot2','ggpubr','stringr','scales','tibble','kableExtra','formattable','reactable','htmltools',"htmlwidgets","webshot2")
suppressPackageStartupMessages(sapply(pkg, require, character = T))
setwd('~/Documents/Mayo_Research/SemiSimulation/Submit/DAA/')
wd = getwd()
source('~/Documents/Mayo_Research/SemiSimulation/Submit/DAA/Code/Function.R')
output = paste0(wd,'/Result/SimulationEvaluation/')
##############################
## Figure 3
sub.methods = c("Rarefy+Wilcox","TSS+Wilcox",'GMPR+Wilcox', 'GMPR+DESeq2','GMPR+edgeR','Wrench+MSeq',
"RAIDA","ANCOM-BC","DACOMP","LDM","Omnibus",'MaAsLin2','ZINQ',
"Aldex2(Wilcox)","GMPR+glm","corncob","eBay(Wilcox)")
data.C1 <- clean_null(name = 'C0', type.name = 'Stool', sub.methods = sub.methods)
data.D1 <- clean_null(name = 'D0', type.name = 'Vaginal', sub.methods = sub.methods)
data <- rbind(data.C1 %>% dplyr::filter(depth.conf.factors=='None') %>% dplyr::select(-depth.conf.factors) %>% mutate(depth.conf.factors ='Stool'),
data.D1 %>% dplyr::filter(depth.conf.factors=='None') %>% dplyr::select(-depth.conf.factors) %>%mutate(depth.conf.factors ='Vaginal'))
plot_FDR_kable(data, covariate.type='binary',kable.methods=sub.methods, type.name = 'Stool',output = output)
##############################
## Figure 3
sub.methods = c("Rarefy+Wilcox","TSS+Wilcox",'GMPR+Wilcox', 'GMPR+DESeq2','GMPR+edgeR','Wrench+MSeq',
"RAIDA","ANCOM-BC","DACOMP","LDM","Omnibus",'MaAsLin2','ZINQ','fastANCOM',
"Aldex2(Wilcox)","GMPR+glm","corncob","eBay(Wilcox)")
data.C1 <- clean_null(name = 'C0', type.name = 'Stool', sub.methods = sub.methods)
data.D1 <- clean_null(name = 'D0', type.name = 'Vaginal', sub.methods = sub.methods)
##############################
sub.methods = c("Rarefy+Wilcox","TSS+Wilcox",'GMPR+Wilcox',
'GMPR+DESeq2','GMPR+edgeR','Wrench+MSeq',
"RAIDA","ANCOM-BC","DACOMP",'ZINQ','fastANCOM',
"LDM","Omnibus",'MaAsLin2',
"GMPR+glm","Aldex2(Wilcox)","GMPR+glm",
"corncob","eBay(Wilcox)")
covariate.type = 'binary'
output = paste0(wd,'/Result/SimulationEvaluation/Figure4/');if(!(dir.exists(output))){dir.create(output)}
##  balanced change: moderate: stool/vaginal
# Stool
res.obj1 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output, filename = 'C4', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename = "OTU=500",sub.methods = sub.methods)
plot.reactable8a(res.df2= res.obj1$res.df2, factor ='nOTUs',diff.otu.mode =c('Abundant','Rare'), output =output, name = 'A.Moderate.Stool')
# Vaginal
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D4', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename =  "OTU=500",sub.methods = sub.methods)
plot.reactable8a(res.df2= res.obj2$res.df2, factor ='nOTUs',diff.otu.mode =c('Abundant','Rare'),output =output, name = 'B.Moderate.Vaginal')
## Figure 5. Unbalanced change: moderate: stool/vaginal
output = paste0(wd,'/Result/SimulationEvaluation/Figure5/');if(!(dir.exists(output))){dir.create(output)}
# Stool
res.obj1 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C54', factor ='nOTUs',
covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename = 'OTU=500',sub.methods = sub.methods)
plot.reactable7b(res.df2= res.obj1$res.df2, factor ='nOTUs',diff.otu.mode =c('Abundant'),output =output, name = 'A.Moderate.Stool')
# Vaginal
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D54', factor ='nOTUs',
covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename = 'OTU=500',sub.methods = sub.methods)
plot.reactable7b(res.df2= res.obj2$res.df2, factor ='nOTUs',diff.otu.mode =c('Abundant'),output =output, name = 'B.Moderate.Vaginal')
## Supplementary Figure 5
output = paste0(wd,'/Result/SimulationEvaluation/SupplementaryFigure5/');if(!(dir.exists(output))){dir.create(output)}
## ------combine stool and vaginal: small sample; OTU = 500; sample =50; effectsize = L3
res.obj1 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C2', factor ='nSams',
covariate.type =covariate.type, sub.level ='nSam_L1',
sub.level.rename = 'sample=50',sub.methods = sub.methods)
plot.reactable8a(res.df2= res.obj1$res.df2, factor ='nSams',  diff.otu.mode =c('Abundant','Rare'),output =output, name = 'A.SmallSample.Stool')
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D2', factor ='nSams',
covariate.type =covariate.type, sub.level ='nSam_L1',
sub.level.rename = 'sample=50',sub.methods = sub.methods)
plot.reactable8a(res.df2= res.obj2$res.df2, factor ='nSams', diff.otu.mode =c('Abundant','Rare'),output =output, name = 'B.SmallSample.Vaginal')
## ------combine stool and vaginal: small sample; OTU = 500; sample =50; effectsize = L3
res.obj1 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C52', factor ='nSams',
covariate.type =covariate.type, sub.level ='nSam_L1',
sub.level.rename = 'sample=50',sub.methods = sub.methods)
plot.reactable7b(res.df2= res.obj1$res.df2, factor ='nSams',  diff.otu.mode =c('Abundant'),output =output, name = 'C.SmallSample.Stool')
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D52', factor ='nSams',
covariate.type =covariate.type, sub.level ='nSam_L1',
sub.level.rename = 'sample=50',sub.methods = sub.methods)
plot.reactable7b(res.df2= res.obj2$res.df2, factor ='nSams',  diff.otu.mode =c('Abundant'),output =output, name = 'D.SmallSample.Vaginal')
## Supplementary Figure 6
output = paste0(wd,'/Result/SimulationEvaluation/SupplementaryFigure6/');if(!(dir.exists(output))){dir.create(output)}
## ------combine stool and vaginal: small OTU; OTU = 50; sample =100; effectsize = L3
res.obj1 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C4', factor ='nOTUs',
covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = 'OTU=50',sub.methods = sub.methods)
plot.reactable8a(res.df2= res.obj1$res.df2, factor ='nOTUs', diff.otu.mode =c('Abundant','Rare'),output =output, name = 'A.SmallOTU.Stool')
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D4', factor ='nOTUs',
covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = 'OTU=50',sub.methods = sub.methods)
plot.reactable8a(res.df2= res.obj2$res.df2, factor ='nOTUs', diff.otu.mode =c('Abundant','Rare'),output =output, name = 'B.SmallOTU.Vaginal')
## ------combine stool and vaginal: small OTU; OTU = 50; sample =100; effectsize = L3
res.obj1 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C54', factor ='nOTUs',
covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = 'OTU=50',sub.methods = sub.methods)
plot.reactable7b(res.df2= res.obj1$res.df2, factor ='nOTUs', diff.otu.mode =c('Abundant'),output =output, name = 'C.SmallOTU.Stool')
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D54', factor ='nOTUs',
covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = 'OTU=50',sub.methods = sub.methods)
plot.reactable7b(res.df2= res.obj2$res.df2, factor ='nOTUs', diff.otu.mode =c('Abundant'),output =output, name = 'D.SmallOTU.Vaginal')
##############################
output = paste0(wd,'/Result/SimulationEvaluation/Figure7/');if(!(dir.exists(output))){dir.create(output)}
## Figure 7: ZicoSeq compare to others
sub.methods = c("Rarefy+Wilcox","TSS+Wilcox",'GMPR+Wilcox', 'GMPR+DESeq2','GMPR+edgeR','Wrench+MSeq','ZicoSeq','fastANCOM','ZINQ',
"RAIDA","ANCOM-BC","DACOMP","LDM","Omnibus",'MaAsLin2',"GMPR+glm","Aldex2(Wilcox)","GMPR+glm","corncob","eBay(Wilcox)")
# Stool - binary --Balanced
res.obj1 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output, filename = 'C4', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename = "OTU=500",sub.methods = sub.methods)
best1 <- cal.best(res.df2= res.obj1$res.df2 %>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant','Rare'))
# Vaginal - binary --Balanced
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D4', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename = "OTU=500",sub.methods = sub.methods)
best2 <- cal.best(res.df2= res.obj2$res.df2%>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant','Rare'))
### Unbalanced
### moderate
# Stool - binary --unBalanced
res.obj3 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C54', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename = "OTU=500",sub.methods = sub.methods)
best3 <- cal.best1(res.df2= res.obj3$res.df2 %>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant'))
# Vaginal - binary --unBalanced
res.obj4 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D54', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L5',
sub.level.rename = "OTU=500",sub.methods = sub.methods)
best4 <- cal.best1(res.df2= res.obj4$res.df2%>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant'))
# arrange
res.obj <- list(df1 = res.obj1$res.df2, df2 = res.obj2$res.df2,df3 = res.obj3$res.df2, df4 = res.obj4$res.df2)
best <- list(best1, best2, best3, best4)
plot.reactable0222(res.obj, best, output =output, factor = 'nOTUs',name = paste0('Moderate.',covariate.type))
### small OTU
# Stool - binary --Balanced
res.obj1 <- clean_data(dir =paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C4', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = "OTU=50",sub.methods = sub.methods)
best1 <- cal.best(res.df2= res.obj1$res.df2 %>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant','Rare'))
# Vaginal - binary --Balanced
res.obj2 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D4', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = "OTU=50",sub.methods = sub.methods)
best2 <- cal.best(res.df2= res.obj2$res.df2%>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant','Rare'))
### Unbalanced
### moderate
# Stool - binary --unBalanced
res.obj3 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'C54', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = "OTU=50",sub.methods = sub.methods)
best3 <- cal.best1(res.df2= res.obj3$res.df2 %>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant'))
# Vaginal - binary --unBalanced
res.obj4 <- clean_data(dir = paste0(wd,'/data/SimulationEvaluation/'),
output = output ,filename = 'D54', factor ='nOTUs', covariate.type =covariate.type, sub.level ='nOTU_L1',
sub.level.rename = "OTU=50",sub.methods = sub.methods)
best4 <- cal.best1(res.df2= res.obj4$res.df2%>% filter(methods != 'ZicoSeq'), factor ='nOTUs',diff.otu.mode =c('Abundant'))
# arrange
res.obj <- list(df1 = res.obj1$res.df2, df2 = res.obj2$res.df2,df3 = res.obj3$res.df2, df4 = res.obj4$res.df2)
best <- list(best1, best2, best3, best4)
plot.reactable0222(res.obj, best, output =output, factor = 'nOTUs',name = paste0('SmallOTU.',covariate.type))
library(tidyr)
data(iris)
dat <- gather(iris, variable, value, -Species)
iris
head(iris)
head(dat)
library(LinDA)
#install package "phyloseq" for importing "smokers" dataset
ind <- smokers$meta$AIRWAYSITE == 'Throat'
otu.tab <- as.data.frame(smokers$otu[, ind])
meta <- cbind.data.frame(Smoke = factor(smokers$meta$SMOKER[ind]),
Sex = factor(smokers$meta$SEX[ind]),
Site = factor(smokers$meta$SIDEOFBODY[ind]),
SubjectID = factor(smokers$meta$HOST_SUBJECT_ID[ind]))
ind1 <- which(meta$Site == 'Left')
res.left <- linda(otu.tab[, ind1], meta[ind1, ], formula = '~Smoke+Sex', alpha = 0.1,
prev.cut = 0.1, lib.cut = 1000, winsor.quan = 0.97)
ind2 <- which(meta$Site == 'Right')
res.right <- linda(otu.tab[, ind2], meta[ind2, ], formula = '~Smoke+Sex', alpha = 0.1,
prev.cut = 0.1, lib.cut = 1000, winsor.quan = 0.97)
rownames(res.left$output[[1]])[which(res.left$output[[1]]$reject)]
rownames(res.right$output[[1]])[which(res.right$output[[1]]$reject)]
linda.obj <- linda(otu.tab, meta, formula = '~Smoke+Sex+(1|SubjectID)', alpha = 0.1,
prev.cut = 0.1, lib.cut = 1000, winsor.quan = 0.97)
linda.plot(linda.obj, c('Smokey', 'Sexmale'),
titles = c('Smoke: n v.s. y', 'Sex: female v.s. male'), alpha = 0.1, lfc.cut = 1,
legend = TRUE, directory = NULL, width = 11, height = 8)
head(res.left$output[[1]])
